return {
	{
		cond = not vim.g.vscode,
		"rcarriga/nvim-dap-ui",
		dependencies = {
			{
				"mfussenegger/nvim-dap",
				config = function()
					local dap = require("dap")
					vim.keymap.set("n", "<F5>", function()
						dap.continue()
					end)
					vim.keymap.set("n", "<F10>", function()
						dap.step_over()
					end)
					vim.keymap.set("n", "<F11>", function()
						dap.step_into()
					end)
					vim.keymap.set("n", "<F12>", function()
						dap.step_out()
					end)
					vim.keymap.set("n", "<Leader>b", function()
						dap.toggle_breakpoint()
					end)
					vim.keymap.set("n", "<Leader>B", function()
						dap.set_breakpoint()
					end)
					vim.keymap.set("n", "<Leader>lp", function()
						dap.set_breakpoint(nil, nil, vim.fn.input("Log point message: "))
					end)
					vim.keymap.set("n", "<Leader>dr", function()
						dap.repl.open()
					end)
					vim.keymap.set("n", "<Leader>dl", function()
						dap.run_last()
					end)
					vim.keymap.set({ "n", "v" }, "<Leader>dh", function()
						require("dap.ui.widgets").hover()
					end)
					vim.keymap.set({ "n", "v" }, "<Leader>dp", function()
						require("dap.ui.widgets").preview()
					end)
					vim.keymap.set("n", "<Leader>df", function()
						local widgets = require("dap.ui.widgets")
						widgets.centered_float(widgets.frames)
					end)
					vim.keymap.set("n", "<Leader>ds", function()
						local widgets = require("dap.ui.widgets")
						widgets.centered_float(widgets.scopes)
					end)
				end,
				dependencies = {
					{
						"jay-babu/mason-nvim-dap.nvim",
						event = "VeryLazy",
						dependencies = {
							"williamboman/mason.nvim",
							"mfussenegger/nvim-dap",
						},
						opts = {
							handlers = {},
						},
					},
				},
			},
			{
				"nvim-neotest/nvim-nio",
			},
		},
		config = function()
			local dap, dapui = require("dap"), require("dapui")
			dapui.setup()
			dap.listeners.before.attach.dapui_config = function()
				dapui.open()
			end
			dap.listeners.before.launch.dapui_config = function()
				dapui.open()
			end
			dap.listeners.before.event_terminated.dapui_config = function()
				dapui.close()
			end
			dap.listeners.before.event_exited.dapui_config = function()
				dapui.close()
			end
			dap.adapters.codelldb = {
				type = "server",
				port = "13000",
				executable = {
					command = "/home/habanero/.local/share/nvim/mason/bin/codelldb",
					args = { "--port", "13000" },
				},
			}
			dap.configurations.cpp = {
				{
					name = "Launch file",
					type = "codelldb",
					request = "launch",
					program = function()
						return vim.fn.input("Path to executable: ", vim.fn.getcwd() .. "/", "file")
					end,
					cwd = "${workspaceFolder}",
					stopOnEntry = false,
				},
			}
			dap.configurations.c = dap.configurations.cpp
			dap.configurations.rust = dap.configurations.cpp
		end,
	},
}
